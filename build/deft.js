Ext.define("Deft.ioc.DependencyProvider",{config:{identifier:null,className:null,parameters:null,fn:null,value:null,singleton:!0,eager:!1},constructor:function(a){this.initConfig(a);null!=a.value&&a.value.constructor===Object&&this.setValue(a.value);this.getEager()&&(null!=this.getValue()&&Ext.Error.raise("Error while configuring '"+this.getIdentifier()+"': a 'value' cannot be created eagerly."),this.getSingleton()||Ext.Error.raise("Error while configuring '"+this.getIdentifier()+"': only singletons can be created eagerly."));
this.getSingleton()||null!=this.getValue()&&Ext.Error.raise("Error while configuring '"+this.getIdentifier()+"': a 'value' can only be configured as a singleton.");return this},resolve:function(a){var d;Ext.log("Resolving '"+this.getIdentifier()+"'.");if(null!=this.getValue())return this.getValue();d=null;null!=this.getFn()?(Ext.log("Executing factory function."),d=this.fn(a)):null!=this.getClassName()?(Ext.log("Creating instance of '"+this.getClassName()+"'."),a=null!=this.getParameters()?[this.getClassName()].concat(this.getParameters()):
[this.getClassName()],d=Ext.create.apply(this,a)):Ext.Error.raise("Error while configuring rule for '"+this.getIdentifier()+"': no 'value', 'fn', or 'className' was specified.");this.getSingleton()&&this.setValue(d);return d}});
Ext.define("Deft.ioc.Injector",{alternateClassName:["Deft.Injector"],requires:["Deft.ioc.DependencyProvider"],singleton:!0,constructor:function(){this.providers={};return this},configure:function(a){Ext.log("Configuring injector.");Ext.Object.each(a,function(a,b){var c;Ext.log("Configuring dependency provider for '"+a+"'.");c=Ext.isString(b)?Ext.create("Deft.ioc.DependencyProvider",{identifier:a,className:b}):Ext.create("Deft.ioc.DependencyProvider",Ext.apply({identifier:a},b));this.providers[a]=
c},this);Ext.Object.each(this.providers,function(a,b){b.getEager()&&(Ext.log("Eagerly creating '"+b.getIdentifier()+"'."),b.resolve())},this)},canResolve:function(a){return null!=this.providers[a]},resolve:function(a,d){var b;b=this.providers[a];return null!=b?b.resolve(d):Ext.Error.raise("Error while resolving value to inject: no dependency provider found for '"+a+"'.")},inject:function(a,d){var b,c,e,f;b={};Ext.isString(a)&&(a=[a]);Ext.Object.each(a,function(e,c){var f,g;g=Ext.isArray(a)?c:e;f=
this.resolve(c,d);d.config.hasOwnProperty(g)?(Ext.log("Injecting '"+c+"' into 'config."+g+"'."),b[g]=f):(Ext.log("Injecting '"+c+"' into '"+g+"'."),d[g]=f)},this);if(d.$configInited)for(c in b)f=b[c],e="set"+Ext.String.capitalize(c),d[e].call(d,f);else d.config=Ext.Object.merge({},d.config||{},b);return d}});
Ext.define("Deft.mixin.Injectable",{requires:["Deft.ioc.Injector"],onClassMixedIn:function(a){a.prototype.constructor=Ext.Function.createInterceptor(a.prototype.constructor,function(){return Deft.Injector.inject(this.inject,this)})}});
Ext.define("Deft.util.Deferred",{alternateClassName:["Deft.Deferred"],constructor:function(){this.state="pending";this.value=this.progress=void 0;this.progressCallbacks=[];this.successCallbacks=[];this.failureCallbacks=[];this.cancelCallbacks=[];this.promise=Ext.create("Deft.Promise",this);return this},then:function(a,d,b,c){var e,f;Ext.isObject(a)?(f=a.success,d=a.failure,b=a.progress,a=a.cancel):(f=a,a=c);e=Ext.create("Deft.Deferred");c=function(a,b){if(Ext.isFunction(a)||a===null||a===void 0)return function(c){var d;
if(Ext.isFunction(a))try{d=a(c);if(d===void 0)e[b](c);else d instanceof Ext.ClassManager.get("Deft.util.Promise")||d instanceof Ext.ClassManager.get("Deft.util.Deferred")?d.then(Ext.bind(e.resolve,e),Ext.bind(e.reject,e),Ext.bind(e.update,e),Ext.bind(e.cancel,e)):e.resolve(d)}catch(f){e.reject(f)}else e[b](c)};Ext.Error.raise("Error while configuring callback: a non-function specified.")};this.register(c(b,"update"),this.progressCallbacks,"pending",this.progress);this.register(c(f,"resolve"),this.successCallbacks,
"resolved",this.value);this.register(c(d,"reject"),this.failureCallbacks,"rejected",this.value);this.register(c(a,"cancel"),this.cancelCallbacks,"cancelled",this.value);return e.getPromise()},always:function(a){return this.then({success:a,failure:a,cancel:a})},update:function(a){"pending"===this.state?(this.progress=a,this.notify(this.progressCallbacks,a)):Ext.Error.raise("Error: this Deferred has already been completed and cannot be modified.")},resolve:function(a){this.complete("resolved",a,this.successCallbacks)},
reject:function(a){this.complete("rejected",a,this.failureCallbacks)},cancel:function(a){this.complete("cancelled",a,this.cancelCallbacks)},getPromise:function(){return this.promise},getState:function(){return this.state},register:function(a,d,b,c){Ext.isFunction(a)&&("pending"===this.state&&d.push(a),this.state===b&&void 0!==c&&this.notify([a],c))},complete:function(a,d,b){"pending"===this.state?(this.state=a,this.value=d,this.notify(b,d),this.releaseCallbacks()):Ext.Error.raise("Error: this Deferred has already been completed and cannot be modified.")},
notify:function(a,d){var b,c,e;c=0;for(e=a.length;c<e;c++)b=a[c],b(d)},releaseCallbacks:function(){this.cancelCallbacks=this.failureCallbacks=this.successCallbacks=this.progressCallbacks=null}});
Ext.define("Deft.util.Promise",{alternateClassName:["Deft.Promise"],statics:{when:function(a,d){var b;if(a instanceof Ext.ClassManager.get("Deft.util.Promise")||a instanceof Ext.ClassManager.get("Deft.util.Deferred"))return a.then(d);b=Ext.create("Deft.util.Deferred");b.resolve(a);return b.then(d)},all:function(a,d){return this.when(this.reduce(a,this.reduceIntoArray,Array(a.length)),d)},any:function(a,d){var b,c,e,f,h,i,k,g,j,l;c=Ext.create("Deft.util.Deferred");j=function(a){c.update(a)};g=function(a){b();
c.resolve(a)};b=function(){return j=g=function(){}};k=function(a){return g(a)};i=function(a){return rejector(a)};f=function(a){return j(a)};e=0;for(l=a.length;e<l;e++)h=a[e],e in a&&this.when(h,k,i,f);return c.then(d)},map:function(a,d){var b,c,e,f;e=Array(a.length);b=0;for(f=a.length;b<f;b++)c=a[b],b in a&&(e[b]=this.when(c,d));return this.reduce(e,this.reduceIntoArray,e)},reduce:function(a,d,b){var c,e;e=this.when;c=[function(b,c,i){return e(b,function(b){return e(c,function(c){return d(b,c,i,a)})})}];
3===arguments.length&&c.push(b);return this.when(this.reduceArray.apply(a,c))},reduceArray:function(a,d){var b,c,e,f,h;e=0;c=Object(this);f=c.length>>>0;b=arguments;if(1>=b.length)for(;;){if(e in c){h=c[e++];break}if(++e>=f)throw new TypeError;}else h=b[1];for(;e<f;)e in c&&(h=a(h,c[e],e,c)),e++;return h},reduceIntoArray:function(a,d,b){a[b]=d;return a}},constructor:function(a){this.deferred=a;return this},then:function(a){return this.deferred.then.apply(this.deferred,arguments)},always:function(a){return this.deferred.always(a)},
cancel:function(a){return this.deferred.cancel(a)},getState:function(){return this.deferred.getState()}},function(){null!=Array.prototype.reduce&&(this.reduceArray=Array.prototype.reduce)});
