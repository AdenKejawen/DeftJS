Ext.define("Deft.ioc.DependencyProvider",{config:{identifier:null,className:null,parameters:null,fn:null,value:null,singleton:!0,eager:!1},constructor:function(a){this.initConfig(a);this.getEager()&&(this.getValue()!=null&&Ext.Error.raise("Error while configuring '"+this.getIdentifier()+"': a 'value' cannot be created eagerly."),this.getSingleton()||Ext.Error.raise("Error while configuring '"+this.getIdentifier()+"': only singletons can be created eagerly."));this.getSingleton()||this.getValue()!=
null&&Ext.Error.raise("Error while configuring '"+this.getIdentifier()+"': a 'value' can only be configured as a singleton.");return this},resolve:function(a){var c;Ext.log("Resolving '"+this.getIdentifier()+"'.");if(this.getValue()!=null)return this.getValue();c=null;this.getFn()!=null?(Ext.log("Executing factory function."),c=this.fn(a)):this.getClassName()!=null?(Ext.log("Creating instance of '"+this.getClassName()+"'."),a=this.getParameters()!=null?[this.getClassName()].concat(this.getParameters()):
[this.getClassName()],c=Ext.create.apply(this,a)):Ext.Error.raise("Error while configuring rule for '"+this.getIdentifier()+"': no 'value', 'fn', or 'className' was specified.");this.getSingleton()&&this.setValue(c);return c}});
Ext.define("Deft.ioc.Injector",{alternateClassName:["Deft.Injector"],requires:["Deft.ioc.DependencyProvider"],singleton:!0,constructor:function(){this.providers={};return this},configure:function(a){Ext.log("Configuring injector.");Ext.Object.each(a,function(a,b){var e;Ext.log("Configuring dependency provider for '"+a+"'.");e=Ext.isString(b)?Ext.create("Deft.ioc.DependencyProvider",{identifier:a,className:b}):Ext.create("Deft.ioc.DependencyProvider",Ext.apply({identifier:a},b));this.providers[a]=
e},this);Ext.Object.each(this.providers,function(a,b){b.getEager()&&(Ext.log("Eagerly creating '"+b.getIdentifier()+"'."),b.resolve())},this)},canResolve:function(a){return this.providers[a]!=null},resolve:function(a,c){var b;b=this.providers[a];return b!=null?b.resolve(c):Ext.Error.raise("Error while resolving value to inject: no dependency provider found for '"+a+"'.")},inject:function(a,c){var b;b={};Ext.isString(a)&&(a=[a]);Ext.Object.each(a,function(e,f){var g,d;d=Ext.isArray(a)?f:e;g=this.resolve(f,
c);return c.config.hasOwnProperty(d)?(Ext.log("Injecting '"+f+"' into 'config."+d+"'."),b[d]=g):(Ext.log("Injecting '"+f+"' into '"+d+"'."),c[d]=g)},this);c.config=Ext.Object.merge({},c.config||{},b);return c}});Ext.define("Deft.mixin.Injectable",{requires:["Deft.ioc.Injector"],onClassMixedIn:function(a){a.prototype.constructor=Ext.Function.createInterceptor(a.prototype.constructor,function(){return Deft.Injector.inject(this.inject,this)})}});
